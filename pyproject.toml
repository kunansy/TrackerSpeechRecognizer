[tool.ruff]
unsafe-fixes = true
line-length = 90
indent-width = 4
target-version = "py312"
extend-exclude = ["tests"]
cache-dir = "/tmp/ruff-cache/"

[tool.ruff.lint]
# "E265", "E261", "E262", in preview
select = ["ALL"]
ignore = [
    # typing kwargs annotation
    "ANN003",
    # catch Exception, docstr, lint/format conflicts
    "BLE001", "D1", "D203", "D212", "D213",
    # literal str in exc, f-str in exc, todo without issue, exc name
    "EM101", "EM102", "FIX002", "N818",
    # args count, sum([]), todo author/link
    "PLR0913", "RUF017", "TD002", "TD003",
    # todo colon/text, exc msg, any in kw/args
    "TD004", "TD005", "TRY003", "ANN401",
    # ternary op, setattr with const
    "SIM108", "B010"
]


[tool.ruff.lint.extend-per-file-ignores]
# return type for routes
"speech_recognizer/main.py" = ["ANN201"]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Query",
    "fastapi.Form",
    "fastapi.Body",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "pydantic.validator",
    "pydantic.field_validator",
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 2

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.mypy]
python_version = 3.12
ignore_missing_imports = true
check_untyped_defs = true
exclude = "tests/"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning"
]

[project]
name = "trackerspeechrecognizer"
version = "1"
description = ""
authors = [
    {name = "Your Name",email = "you@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = "~=3.12"
dependencies = [
    "speechrecognition (>=3.12.0,<3.13.0)",
    "pyaudio (>=0.2.13,<0.3.0)",
    "pydub (>=0.25.1,<0.26.0)",
    "environs (>=14.1.0,<14.2.0)",
    "pydantic (>=2.10.5,<2.11.0)",
    "fastapi (>=0.110.0,<0.111.0)",
    "uvloop (>=0.21.0,<0.22.0)",
    "uvicorn (>=0.34.0,<0.35.0)",
    "orjson (>=3.10.15,<3.11.0)",
    "gunicorn (>=23.0.0,<23.1.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
mypy = "~1.15.0"
ruff = "~0.9.0"
pytest = "~8.3.4"
